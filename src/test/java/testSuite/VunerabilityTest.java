package testSuite;

import io.qameta.allure.Attachment;
import io.qameta.allure.Step;
import io.restassured.response.Response;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.given;


public class VunerabilityTest {
    private Response response;
    private String scanId;
    private String host = "http://localhost:9292";

    @Test
    @Order(2)
    public void scannerVulnerabilityTest() throws InterruptedException {
        startScanner();
        checkScannerProgress();
    }

    @Step("1.- Seleccione el Host e inicia el Escaneo de vulnerabilidad en Zap")
    private void startScanner(){
        response = given().
                queryParam("url", "https://www.saucedemo.com/").
                log().all().
                when().
                get(host + "/JSON/ascan/action/scan/");

        response.then().log().all();
        scanId = response.then().extract().path("scan");
        System.out.println("id >>>>" + scanId);
    }

    @Step("2.- Verifica que el progreso del escaneo llegue al 100%")
    private void checkScannerProgress() throws InterruptedException {
        String state = "0";
        do {
            Thread.sleep(5000);
            response = given().
                    queryParam("scanId", scanId).
                    log().all().
                    when().get(host + "/JSON/ascan/view/status/");
            response.then().log().all();
            state = response.then().extract().path("status");
            System.out.println("Estado : " + "[" + state + "%]");
        }
        while (!state.equals("100"));
        System.out.println("Llego al 100 %");
    }

    @AfterEach
    public void generateReport(){
        response= given().
                queryParam("scanId", scanId).
                log().all()
                .when()
                .get(host + "/HTML/ascan/view/scanProgress/");

        response.then().log().all();
        attachReport("list vulnerability", response.getBody().asString());

        response= given().
                log().all()
                .when()
                .get(host + "/OTHER/core/other/htmlreport/");

        response.then().log().all();
        attachReport("report owasp zap vulneerability alerts", response.getBody().asString());
    }


    @Attachment(value = "{0}", type = "text/html")
    public String attachReport(String name, String content){
        return content;

    }

}
